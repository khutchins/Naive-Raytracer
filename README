A naive, mostly commented, basic raytracing system in C++.

The main purposes of this project are to:
A) Refresh and increase my knowledge of raytracing through the implementation of a raytracer.
B) To become familiar with using git.

This is a pretty textbook implementation of a raytracer currently.  If you're looking for any advanced techniques, you won't find them here.  You're welcome to look if you want though.

It can encorporate the following elements:
Planes
Spheres
Cameras
Point Lights
Disks

Reflection and refraction work.
Sphere and Plane diffusive work.
Point lights work.
Perspective and orthogonal cameras work.

Anti-aliasing options:
none - no anti-aliasing
naive-average - a naive weighted average of a pixel with its neighbors
fsaa4 - 4xFSAA (scene is sampled at 4x the normal resolution and averaged down to normal)
fsaa16 - 16xFSAA (scene is sampled at 16x the normal resolution and averaged down to normal)

This currently outputs a .bmp file for each camera in a scene: <scene_name>-<camera_number>.bmp or <scene_name>-<name>.bmp if the camera name parameter is defined.

Usage: ./<program> <path-to-scene-file>

This code is being run in Windows and should work on Linux and probably Mac by running the makefile.

Example scene files are in /scenes.