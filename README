A naive, unfinished, mostly commented, (very) basic raytracing system in C++.

The main purposes of this project are to:
A) Refresh and increase my knowledge of raytracing through the implementation of a raytracer.
B) To become familiar with using git.

This is a pretty textbook implementation of a raytracer currently.  If you're looking for any advanced techniques, you won't find them here.  You're welcome to look if you want though.

It can encorporate the following elements:
Planes
Spheres
Cameras
Point Lights

There is an issue if planes intersect with each other (seen in the second camera in src/intersectplanes.txt)
Reflection and refraction somewhat work.
Sphere and Plane diffusive lighting work.
Point lights work.
Perspective and orthogonal cameras work.
There is very naive anti-aliasing in which each value is averaged with a weighted average across all adjacent values.  It essentially just blurs the image.

This currently outputs two .bmp files for each camera in a scene: <scene_name><camera_number>.bmp and <scene_name><camera_number>_aa_naive.bmp

Usage: ./<program> <path-to-scene-file>

This code is being run in Windows.  Some tweaking may have to be done to run it on Linux/Mac.  I'll try it on there once I get it bug-free.

An example scene file is in /scenes